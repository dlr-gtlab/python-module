########################################################
###############GTlab Pipeline Version 2.0.0 ############
########################################################
# This is a slight changed version
# - PYVERSION variable to support the build using different Python versions
# - the Python version is appended to the build and test job names
# - debug build is not possible because PythonQt is not available as debug build


# These variables are defined in the CI project settings:
#  CATEGORY: 03_core_modules
#  PROFILENAME: gtlab_python.pro
#  TARGETDIRNAME: python37
#  TARGETNAME: GTlabPython37
#  UNITTESTSNAME: GTlabUnitTest

# These variables are defined in the AT-TWK group settings:
#   DEVTOOLS_Linux_Stable
#   DEVTOOLS_Linux_Unstable
#   DEVTOOLS_Win_Stable 
#   DEVTOOLS_Win_Unstable

# Environment variables to use in the pipeline globally
variables:
  PIPELINEVERSION: "2.0.0"
  GIT_SUBMODULE_STRATEGY: none
  
  # Regulare expression pattern
  # enclose the branch name with ^ and $
  # separete severl branch names with |
  # e.g. /^main_1_0$|^main_1_1$/
  STABLE_BRANCHES: /^master$|^master_1_8$|^146-deployment-jobs$/
  
  # Name of the unstable branch (if it exists)
  UNSTABLE_BRANCH: unstable_master

# inlcude some templates from this file
include:
  - local: '/ci-templates/.ci-templates.yml'
#include:
#  - project: 'at-twk/gitlab-templates'
#    file: '/ci-templates/.ci-templates.yml'

stages:
  - update
  - build
  - test
  - regressionTest
  - unstableBuild
  - unstableTest
  - deploy
  - codequality
  - package
  - badges

# DevTools update
devtoolsUpdateWindows:
  stage: update
  extends: .devToolsUpdateWindowsRules

devtoolsUpdateLinux:
  stage: update
  extends: .devToolsUpdateLinuxRules

# build on Windows system
windowsBuildDebugPy37:
  stage: build
  extends: 
    - .buildWinDebugSub
    - .stable-debug
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  variables:
    PYVERSION: "37"
    BUILDBATCH: "true"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Win_Stable

windowsBuildDebugPy37Unstable:
  stage: unstableBuild
  extends: 
    - .buildWinDebugSub
    - .unstable-debug
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  variables:
    PYVERSION: "37"
    BUILDBATCH: "true"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Win_Unstable

windowsBuildReleasePy37:
  stage: build
  extends: 
    - .buildWinReleaseSub
    - .stable-release
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  variables:
    PYVERSION: "37"
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Win_Stable

windowsBuildReleasePy37Unstable:
  stage: unstableBuild
  extends: 
    - .buildWinReleaseSub
    - .unstable-release
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  variables:
    PYVERSION: "37"
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Win_Unstable
    
# build on Linux system
linuxBuildDebugPy37:
  stage: build
  extends: 
    - .buildLinuxDebug
    - .stable-debug
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Linux_Stable

linuxBuildDebugPy37Unstable:
  stage: unstableBuild
  extends: 
    - .buildLinuxDebug 
    - .unstable-debug
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Linux_Unstable
 
linuxBuildReleasePy37:
  stage: build
  extends: 
    - .buildLinuxRelease 
    - .stable-release
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Linux_Stable

linuxBuildReleasePy37Unstable:
  stage: unstableBuild
  extends: 
    - .buildLinuxRelease 
    - .unstable-release
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Linux_Unstable

# run tests using the binary built before
testWin512Py37:
  stage: test
  extends: 
    - .winTestTemplateSub
    - .stable-debug
  script:
    - .\tests\unittests\runUnittestsQt512.bat
    - get-content CoverageReport*\index.html
  needs: 
    - windowsBuildDebugPy37
  dependencies: 
    - windowsBuildDebugPy37
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Stable

testWin512UnstablePy37:
  stage: unstableTest
  extends: 
    - .winTestTemplateSub
    - .unstable-debug
  script:
    - .\tests\unittests\runUnittestsQt512.bat
    - get-content CoverageReport*\index.html
  needs: 
    - windowsBuildDebugPy37Unstable
  dependencies: 
    - windowsBuildDebugPy37Unstable
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Unstable  

testLinux512Py37:
  stage: test
  extends: 
    - .linuxTestTemplateSub
    - .stable-debug
  needs: 
    - linuxBuildDebugPy37
  dependencies:
    - linuxBuildDebugPy37
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Stable    

testLinux512UnstablePy37:
  stage: unstableTest
  extends: 
    - .linuxTestTemplateSub
    - .unstable-debug
  needs: 
    - linuxBuildDebugPy37Unstable
  dependencies:
    - linuxBuildDebugPy37Unstable
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Unstable   

# deployment
generateJobs:
  stage: deploy
  dependencies: []
  rules:
    - if: $CI_COMMIT_TAG != null
  tags:
    - Win10
  before_script:
    - git submodule sync
    - git submodule update --init
    - $TEMP_REGEXP=$STABLE_BRANCHES.TrimStart('/')
    - $TEMP_REGEXP=$TEMP_REGEXP.TrimEnd('/')
    - git ls-remote origin | Select-String $CI_COMMIT_SHA | Select-String refs/heads/ | % {$_ -replace ".*\/", ""} | Select-String -Pattern "$TEMP_REGEXP" | % {$_.Line} | echo -outvariable STABLE_COMMIT_BRANCH
  script:
    # The tag base is a stable branch and there is no separated unstable branch.
    - if(!(${UNSTABLE_BRANCH}) -and (${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME windows -r RELEASESTATUS stable -r DEPENDDEBUG windowsBuildDebugPy37 -r DEPENDRELEASE windowsBuildReleasePy37 -r JOBNAME deployStableWin }
    - if(!(${UNSTABLE_BRANCH}) -and (${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME windows -r RELEASESTATUS unstable -r DEPENDDEBUG windowsBuildDebugPy37Unstable -r DEPENDRELEASE windowsBuildReleasePy37Unstable -r JOBNAME deployUntableWin }
    - if(!(${UNSTABLE_BRANCH}) -and (${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME linux -r RELEASESTATUS stable -r DEPENDDEBUG linuxBuildDebugPy37 -r DEPENDRELEASE linuxBuildReleasePy37 -r JOBNAME deployStableLinux }
    - if(!(${UNSTABLE_BRANCH}) -and (${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME linux -r RELEASESTATUS unstable -r DEPENDDEBUG linuxBuildDebugPy37Unstable -r DEPENDRELEASE linuxBuildReleasePy37Unstable -r JOBNAME deployUnstableLinux }
    # The tag base is a stable branch and there is a separated unstable branch.
    - if((${UNSTABLE_BRANCH}) -and (${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME windows -r RELEASESTATUS stable -r DEPENDDEBUG windowsBuildDebugPy37 -r DEPENDRELEASE windowsBuildReleasePy37 -r JOBNAME deployStableWin }
    - if((${UNSTABLE_BRANCH}) -and (${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME linux -r RELEASESTATUS stable -r DEPENDDEBUG linuxBuildDebugPy37 -r DEPENDRELEASE linuxBuildReleasePy37 -r JOBNAME deployStableLinux }
    # The tag base is an unstable branch.
    - if((${UNSTABLE_BRANCH}) -and !(${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME windows -r RELEASESTATUS unstable -r DEPENDDEBUG windowsBuildDebugPy37Unstable -r DEPENDRELEASE windowsBuildReleasePy37Unstable -r JOBNAME deployUntableWin }
    - if((${UNSTABLE_BRANCH}) -and !(${STABLE_COMMIT_BRANCH})){ & $PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME linux -r RELEASESTATUS unstable -r DEPENDDEBUG linuxBuildDebugPy37Unstable -r DEPENDRELEASE linuxBuildReleasePy37Unstable -r JOBNAME deployUntableLinux }
  artifacts:
    paths:
      - deploy.yml
  variables:
    PYTHONEXEPATH: "C:\\ProgramData\\Miniconda3\\python.exe"
    PYCONFIGDYNJOB: .\tests\scripts\DynJobConfiguration.py
    TEMPLATEFILE: .\tests\scripts\deployJob.template
    OUTPUTYAML: .\deploy.yml

triggerJobs:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG != null
  needs:
    - generateJobs
  trigger:
    include:
      - artifact: deploy.yml
        job: generateJobs
    strategy: depend


# code quality
codingstyle:
  stage: codequality
  extends: .codingStyleTemplateRules 
 
cppcheck:
  stage: codequality
  extends: .cppCheckTemplateRules

pages:
  stage: badges
  extends: .pageTemplateRules 

.package:
  stage: package
  extends: .packageTemplateSub

# badges
badges:
  stage: badges
  extends: .badgeTemplateRules 
  dependencies:
    - windowsBuildDebugPy37
    - linuxBuildDebugPy37
    - testWin512Py37
    - testLinux512Py37
    - codingstyle
