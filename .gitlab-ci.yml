########################################################
###############GTlab Pipeline Version 2.0.0 ############
########################################################
# This is a slight changed version
# - PYVERSION variable to support the build using different Python versions
# - the Python version is appended to the build and test job names
# - debug build is not possible because PythonQt is not available as debug build

# These variables are defined in the CI project settings:
#  CATEGORY: 03_core_modules
#  PROFILENAME: gtlab_python.pro
#  TARGETDIRNAME: python37
#  TARGETNAME: GTlabPython37
#  UNITTESTSNAME: GTlabUnitTest

# These variables are defined in the AT-TWK group settings:
#   DEVTOOLS_Linux_Stable
#   DEVTOOLS_Linux_Unstable
#   DEVTOOLS_Win_Stable 
#   DEVTOOLS_Win_Unstable
#   WIN_PYTHON
#   STABLE_MAJOR
#   STABLE_MINOR
#   UNSTABLE_MAJOR
#   UNSTABLE_MINOR

# Environment variables to use in the pipeline globally
variables:
  PIPELINEVERSION: "2.0.0"
  GIT_SUBMODULE_STRATEGY: none
  
  # Regulare expression pattern
  # enclose the branch name with ^ and $
  # separete severl branch names with |
  # e.g. /^main_1_0$|^main_1_1$/
  STABLE_BRANCHES: /^master$/
  
  # Name of the unstable branch (if it exists)
  # UNSTABLE_BRANCH: unstable_master

# inlcude some templates from this file
include:
  - project: 'at-twk/gitlab-templates'
    file: '/ci-templates/.ci-templates-2-0.yml'

stages:
  - update
  - build
  - test
  - regressionTest
  - unstableBuild
  - unstableTest
  - deploy
  - codequality
  - package
  - badges

# DevTools update
devtoolsUpdateWindows:
  stage: update
  extends: .devToolsUpdateWindows

devtoolsUpdateLinux:
  stage: update
  extends: .devToolsUpdateLinux

# build on Windows system
windowsBuildDebugPy37:
  stage: build
  extends: 
    - .stable-debug
    - .buildWinDebug
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  artifacts:
    paths:
      - lib\$TARGETDIRNAME\$TARGETNAME.dll
      - lib\$TARGETDIRNAME\$TARGETNAME.lib
      - lib\$TARGETDIRNAME\$TARGETNAME.pdb
      - include\$TARGETDIRNAME\*.h
      - build\$UNITTESTSNAME.exe
      - build\$UNITTESTSNAME.pdb
      - buildLog512.txt
    expire_in: 1 week
    when: always

  variables:
    PYVERSION: "37"
    BUILDBATCH: "true"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Win_Stable

windowsBuildDebugUnstablePy37:
  stage: unstableBuild
  extends: 
    - .unstable-debug
    - .buildWinDebug
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  artifacts:
    paths:
      - lib\$TARGETDIRNAME\$TARGETNAME-d.dll
      - lib\$TARGETDIRNAME\$TARGETNAME-d.lib
      - lib\$TARGETDIRNAME\$TARGETNAME-d.pdb
      - include\$TARGETDIRNAME\*.h
      - build\$UNITTESTSNAME.exe
      - build\$UNITTESTSNAME.pdb
      - buildLog512.txt
    expire_in: 1 week
    when: always
  variables:
    PYVERSION: "37"
    BUILDBATCH: "true"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Win_Unstable

windowsBuildReleasePy37:
  stage: build
  extends: 
    - .stable-release
    - .buildWinRelease
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  variables:
    PYVERSION: "37"
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Win_Stable

windowsBuildReleaseUnstablePy37:
  stage: unstableBuild
  extends: 
    - .unstable-release
    - .buildWinRelease
  needs:
    - job: devtoolsUpdateWindows
      optional: true
  variables:
    PYVERSION: "37"
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Win_Unstable
    
# build on Linux system
linuxBuildDebugPy37:
  stage: build
  extends: 
    - .stable-debug
    - .buildLinuxDebug
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  artifacts:
    paths:
      - lib/$TARGETDIRNAME/lib$TARGETNAME.so
      - include/$TARGETDIRNAME/*.h
      - build/$UNITTESTSNAME
      - linuxBuild.txt
    when: always
    expire_in: 1 week

  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Linux_Stable

linuxBuildDebugUnstablePy37:
  stage: unstableBuild
  extends: 
    - .unstable-debug
    - .buildLinuxDebug 
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  artifacts:
    paths:
      - lib/$TARGETDIRNAME/lib$TARGETNAME.so
      - include/$TARGETDIRNAME/*.h
      - build/$UNITTESTSNAME
      - linuxBuild.txt
    when: always
    expire_in: 1 week

  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    BUILDMODE: release
    DEVTOOLS: $DEVTOOLS_Linux_Unstable
 
linuxBuildReleasePy37:
  stage: build
  extends: 
    - .stable-release
    - .buildLinuxRelease 
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Linux_Stable

linuxBuildReleaseUnstablePy37:
  stage: unstableBuild
  extends: 
    - .unstable-release
    - .buildLinuxRelease 
  needs:
    - job: devtoolsUpdateLinux
      optional: true
  variables:
    PYVERSION: 37
    BUILDBATCH: "false"
    DEVTOOLS: $DEVTOOLS_Linux_Unstable

# run tests using the binary built before
testWin512Py37:
  stage: test
  extends: 
    - .stable-debug
    - .winTestTemplate
  script:
    - .\tests\unittests\runUnittestsQt512.bat
    - get-content CoverageReport*\index.html
  needs: 
    - windowsBuildDebugPy37
  dependencies: 
    - windowsBuildDebugPy37
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Stable

testWin512UnstablePy37:
  stage: unstableTest
  extends:
    - .unstable-debug  
    - .winTestTemplate
  script:
    - .\tests\unittests\runUnittestsQt512.bat
    - get-content CoverageReport*\index.html
  needs: 
    - windowsBuildDebugUnstablePy37
  dependencies: 
    - windowsBuildDebugUnstablePy37
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Unstable  

testLinux512Py37:
  stage: test
  extends: 
    - .stable-debug
    - .linuxTestTemplate
  needs: 
    - linuxBuildDebugPy37
  dependencies:
    - linuxBuildDebugPy37
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Stable    

testLinux512UnstablePy37:
  stage: unstableTest
  extends: 
    - .unstable-debug
    - .linuxTestTemplate
  needs: 
    - linuxBuildDebugUnstablePy37
  dependencies:
    - linuxBuildDebugUnstablePy37
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Unstable   

# deployment
createJobs:
  stage: deploy
  extends:
    - .createJobsTemplate
  dependencies: []
  variables:
    WinReStableJob: windowsBuildReleasePy37
    WinReUnstableJob: windowsBuildReleaseUnstablePy37
    WinDeStableJob: windowsBuildDebugPy37
    WinDeUnstableJob: windowsBuildDebugUnstablePy37
    LinReStableJob: linuxBuildReleasePy37
    LinReUnstableJob: linuxBuildReleaseUnstablePy37
    LinDeStableJob: linuxBuildDebugPy37
    LinDeUnstableJob: linuxBuildDebugUnstablePy37

triggerJobs:
  stage: deploy
  extends: .only-tags
  needs:
    - createJobs
  trigger:
    include:
      - artifact: deploy.yml
        job: createJobs
    strategy: depend
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID

# code quality
codingstyle:
  stage: codequality
  extends: .codingStyleTemplate
 
.cppcheck:
  stage: codequality
  extends: .cppCheckTemplate

cppcheck:
  stage: codequality
  needs: []
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != null && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ $STABLE_BRANCHES
      variables:
        COMPARE_TO: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - if: $CI_COMMIT_BRANCH != null && $CI_COMMIT_BRANCH =~ $STABLE_BRANCHES
      variables:
        COMPARE_TO: $CI_COMMIT_BRANCH
    - if: $UNSTABLE_BRANCH != null && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != null && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $UNSTABLE_BRANCH
      variables:
        COMPARE_TO: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - if: $UNSTABLE_BRANCH != null && $CI_COMMIT_BRANCH == $UNSTABLE_BRANCH
      variables:
        COMPARE_TO: $CI_COMMIT_BRANCH
  tags:
    - Linux
  before_script:
    - python3 -m venv env
    - source env/bin/activate
    - python3 -m pip install cppcheck-codequality
  script:
    - cppcheck --inline-suppr --xml --suppress=unusedFunction --library=qt.cfg --enable=all src/ 2> cppcheck_out.xml
    - cppcheck-codequality --input-file=cppcheck_out.xml --output-file=codequality.json
    - 'curl --location --header "PRIVATE-TOKEN: $PROJECT_ACCESS_TOKEN" -o $QUALITY_MAIN $QUALITY_MAIN_URL'
    - python3 ./tests/cppcheckReport/CppcheckReport.py -o $QUALITY_MAIN -n $QUALITY
  variables:
    QUALITY_MAIN: codequality_main.json
    QUALITY: codequality.json
    CPPCHECK_JOB: cppcheck
    QUALITY_MAIN_URL: "https://gitlab.dlr.de/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/$COMPARE_TO/raw/$QUALITY?job=$CPPCHECK_JOB"
  artifacts:
    reports:
      codequality: $QUALITY
    paths:
      - $QUALITY
      - $QUALITY_MAIN
    when: always
    
pages:
  stage: badges
  extends: .pageTemplate

package:
  stage: package
  extends: .packageTemplate

# badges
badges:
  stage: badges
  extends: 
    - .stable-only-master
    - .badgeTemplate
  dependencies:
    - windowsBuildDebugPy37
    - linuxBuildDebugPy37
    - testWin512Py37
    - testLinux512Py37
    - codingstyle

badgesUnstable:
  stage: badges
  extends: 
    - .unstable-only-master
    - .badgeTemplate
  dependencies:
    - windowsBuildDebugUnstablePy37
    - linuxBuildDebugUnstablePy37
    - testWin512UnstablePy37
    - testLinux512UnstablePy37
    - codingstyle
    

