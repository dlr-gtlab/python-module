########################################################
###############GTlab Pipeline Version 2.0.0 ############
########################################################
# This is a slight changed version
# - PYVERSION variable to support the build using different Python versions
# - the Python version is appended to the build and test job names
# - debug build is not possible because PythonQt is not available as debug build


# These variables are defined in the CI project settings:
#  CATEGORY: 03_core_modules
#  PROFILENAME: gtlab_python.pro
#  TARGETDIRNAME: python37
#  TARGETNAME: GTlabPython37
#  UNITTESTSNAME: GTlabUnitTest

# These variables are defined in the AT-TWK group settings:
#   DEVTOOLS_Linux_Stable
#   DEVTOOLS_Linux_Unstable
#   DEVTOOLS_Win_Stable 
#   DEVTOOLS_Win_Unstable

# Environment variables to use in the pipeline globally
variables:
  PIPELINEVERSION: "2.0.0"
  GIT_SUBMODULE_STRATEGY: none
  
  # Regulare expression pattern
  # enclose the branch name with ^ and $
  # separete severl branch names with |
  # e.g. /^main_1_0$|^main_1_1$/
  STABLE_BRANCHES: /^master$|^master_1_8$/
  
  # Name of the unstable branch (if it exists)
  # UNSTABLE_BRANCH: unstable_master

# inlcude some templates from this file
include:
  - local: '/ci-templates/.ci-templates.yml'
#include:
#  - project: 'at-twk/gitlab-templates'
#    file: '/ci-templates/.ci-templates.yml'

stages:
  - update
  - build
  - test
  - regressionTest
  - unstableBuild
  - unstableTest
  - deploy
  - codequality
  - package
  - badges




generateJobs:
  stage: deploy
  rules:
    - if: $UNSTABLE_BRANCH == null && $CI_COMMIT_TAG != null
  tags:
    - Win10
  before_script:
    - git submodule sync
    - git submodule update --init
    - $TEMP_REGEXP=$STABLE_BRANCHES.TrimStart('/')
    - $TEMP_REGEXP=$TEMP_REGEXP.TrimEnd('/')
    - git ls-remote origin | Select-String $CI_COMMIT_SHA | Select-String refs/heads/ | % {$_ -replace ".*\/", ""} | Select-String -Pattern "$TEMP_REGEXP" | % {$_.Line} | echo -outvariable COMMIT_BRANCH
  script:
    - '& if(${COMMIT_BRANCH}){echo ${COMMIT_BRANCH}} else{ echo Commit branch is empty }'
    - '& $env:PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME windows -r RELEASESTATUS stable -r JOBNAME deployStableWin'
    - '& $env:PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME windows -r RELEASESTATUS unstable -r JOBNAME deployUntableWin'
    - '& $env:PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME linux -r RELEASESTATUS stable -r JOBNAME deployStableLinux'
    - '& $env:PYTHONEXEPATH ${PYCONFIGDYNJOB} -t ${TEMPLATEFILE} -o ${OUTPUTYAML} -r PLATFORMNAME linux -r RELEASESTATUS unstable -r JOBNAME deployUntableLinux'
  artifacts:
    paths:
      - deploy.yml
  variables:
    PYTHONEXEPATH: "C:\\ProgramData\\Miniconda3\\python.exe"
    PYCONFIGDYNJOB: .\tests\scripts\ConfigureDynJobs.py
    TEMPLATEFILE: .\tests\scripts\deployJob.template
    OUTPUTYAML: .\deploy.yml

triggerJobs:
  stage: deploy
  rules:
    - if: $UNSTABLE_BRANCH == null && $CI_COMMIT_TAG != null
  needs:
    - generateJobs
  trigger:
    include:
      - artifact: deploy.yml
        job: generateJobs
    strategy: depend
  variables:
    TESTVARIABLE: "Hello World!"

# DevTools update
testA:
  stage: update
  script:
    - $TEST_VAR="Hello World"
  tags:
    - Win10

.testB:
  stage: update
  needs: 
     - testA
  script:
    - echo $TEST_VAR
  tags:
    - Win10
